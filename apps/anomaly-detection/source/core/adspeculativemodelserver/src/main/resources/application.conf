akka.kafka.consumer {

  # If for any reason `KafkaConsumer.poll` blocks for longer than the configured
  # poll-timeout then it is forcefully woken up with `KafkaConsumer.wakeup`.
  # See https://kafka.apache.org/10/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#wakeup--
  # The KafkaConsumerActor will throw
  # `org.apache.kafka.common.errors.WakeupException` which will be ignored
  # until `max-wakeups` limit gets exceeded.
  wakeup-timeout = 10s

  # After exceeding maxinum wakeups the consumer will stop and the stage and fail.
  # Setting it to 0 will let it ignore the wakeups and try to get the polling done forever.
  max-wakeups = 10

  # If enabled, log stack traces before waking up the KafkaConsumer to give
  # some indication why the KafkaConsumer is not honouring the `poll-timeout`
  wakeup-debug = false
}

kafka {
  brokers = "10.0.6.134:1025,10.0.7.217:1027,10.0.13.237:1026"
  brokers = ${?KAFKA_BROKERS}
  sourcetopic = "intelData"
  sourcegroup = "IntelDataGroup"
  modeltopic = "intelModel"
  modelgroup = "IntelModelGroup"
  servingtopic = "intelServing"
  servinggroup = "IntelServingGroup"
}

grafana {
  host = "10.0.14.207"
  host = ${?GRAFANA_HOST}
  port = "12504"
  port = ${?GRAFANA_PORT}
}

influxdb {
  host = "10.0.6.63"
  host = ${?INFLUXDB_HOST}
  port = "27436"
  port = ${?INFLUXDB_PORT}
}

modelServer{
  port = 5501
  port = ${?MODELSERVER_PORT}
}